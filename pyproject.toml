[tool.poetry]
name = "gpuscheduler"
version = "0.1.0"
description = "A dynamic, AI-driven platform for GPU resource management."
authors = ["Engineering Team <eng@gpuscheduler.io>"]
license = "GPL-3.0-only"
readme = "README.md"
packages = [{include = "backend", from = "src"}, {include = "agent", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.10, <3.13"

[tool.poetry.group.backend.dependencies]
# Core service framework
fastapi = "^0.110.0"
uvicorn = {version = "^0.27.1", extras = ["standard"]}
pydantic-settings = "^2.1.0"
# Database
sqlalchemy = {version = "^2.0.27", extras = ["asyncio"]}
asyncpg = "^0.29.0"
alembic = "^1.13.1"
# Async tasks
celery = "^5.3.6"
redis = "^5.0.1"

[tool.poetry.group.agent.dependencies]
httpx = "^0.27.0"
watchdog = "^4.0.0"
pyyaml = "^6.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"